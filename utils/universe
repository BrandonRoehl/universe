#!/usr/bin/env ruby
require 'fileutils'
@universe = File.expand_path($0).sub(/\/bin\/universe$/, '')
require "#{@universe}/utils/Compile"
require "#{@universe}/utils/Logo"

def compile
    FileUtils.rm_rf "#{@universe}/bin"
    FileUtils.mkdir "#{@universe}/bin"
    for dir in Dir.glob("#{@universe}/sources/*").select {|f| File.directory? f}
        Compile.all dir
    end
    FileUtils.symlink('../utils/universe', "#{@universe}/bin/universe", force: true)
end

def install
    rc = File.expand_path('~/.universerc')
    if File.file?(rc)
        Logo.credits
        FileUtils.rm_rf "#{@universe}/sources"
        FileUtils.mkdir "#{@universe}/sources"
        for line in File.open rc
            puts
            if line =~ /(?:\w+@(.+?):|http(?:s?):\/\/(.+?)\/|(.+?):)(.*)\.git/
                # match git urls
                puts "Clonning #{$4} from #{$1 || $2 || $3} into '#{@universe}/sources'"
                system 'git', 'clone', $&, "#{@universe}/sources/#{$4.gsub '/', '_'}"
            elsif line =~ /(.*\/(.*?)\.git)\s*$/
                # local git urls
                puts "Clonning #{$1}"
                system 'git', 'clone', '--local', $1, "#{@universe}/sources/#{$2}"
            elsif line =~ /\S+/
                # match paths
                path = $&.gsub /^~/, File.expand_path('~')
                puts "Simlinking #{path} into '#{@universe}/sources'"
                FileUtils.symlink(path, "#{@universe}/sources/#{File.basename path}")
            end
        end
        compile
    else
        puts "universerc not found searching in #{File.expand_path('~')}"
        exit 1
    end
end

def update
    system 'git', '-C', @universe, 'pull', 'origin', 'master'
    for dir in Dir.glob("#{@universe}/sources/*/.git")
        dir.sub! /\/\.git$/, ''
        system 'git', '-C', dir, 'pull', 'origin', 'master'
    end
    compile
end

send ARGV[0]
